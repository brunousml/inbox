version: '2'

volumes:
  postgres_data_dev: {}
  postgres_backup_dev: {}
  django_media: {}

services:
  postgres:
    build: ./compose/postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - postgres_backup_dev:/backups

  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    command: /start-dev.sh
    depends_on:
      - postgres
      - redis
    environment:
      - USE_DOCKER=yes
    volumes:
      - .:/app
      - django_media:/app/inbox/media
    ports:
      - "8000:8000"
  redis:
    image: redis:latest

# ------
# Os serviços abaixo executam as tarefas assíncronas.
# ------
  celeryworker:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    depends_on:
     - postgres
     - redis
     - clamav
    environment:
      - USE_DOCKER=yes
      - C_FORCE_ROOT=yes  # confirma a execução do celery como super-usuário
    volumes:
      - .:/app
      - django_media:/app/inbox/media
    command: celery -A inbox.taskapp worker -l INFO

  celerybeat:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    depends_on:
      - postgres
      - redis
      - clamav
    environment:
      - USE_DOCKER=yes
    volumes:
      - .:/app
      - django_media:/app/inbox/media
    command: celery -A inbox.taskapp beat -l INFO

  clamav:
    build: ./compose/clamav
    ports:
      - "3310:3310"

